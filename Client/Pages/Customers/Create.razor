@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

@*<FormComponent ButtonText="Create Customer" customer="customer" OnValidSubmit="@CreateCustomer" />*@


<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>First Name: </label>
		<div>
			<InputText @bind-Value="customer.CusFirstName" class="form-control" />
			<ValidationMessage For="@(() => customer.CusFirstName)" />
		</div>
	</div>

	<div class="form-group">
		<label>Last Name: </label>
		<div>
			<InputText @bind-Value="customer.CusLastName" class="form-control" />
			<ValidationMessage For="@(() => customer.CusLastName)" />
		</div>
	</div>

	<div class="form-group">
		<label>Contact Number: </label>
		<div>
			<InputText @bind-Value="customer.ContactNumber" class="form-control" />
			<ValidationMessage For="@(() => customer.ContactNumber)" />
		</div>
	</div>

	<div class="form-group">
		<label>Email Address: </label>
		<div>
			<InputText @bind-Value="customer.EmailAddress" class="form-control" />
			<ValidationMessage For="@(() => customer.EmailAddress)" />
		</div>
	</div>

	<br />
	<button type="submit" class="btn btn-success btn-block">
		Create Customer
	</button>
</EditForm>


@code {
	Customer customer = new Customer();

	private async Task CreateCustomer()
	{
		await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
		_navManager.NavigateTo("/customers/");
	}
}